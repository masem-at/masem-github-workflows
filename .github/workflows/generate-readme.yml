# .github/workflows/generate-readme.yml
name: Generate Project README

on:
    workflow_dispatch:

permissions:
   contents: write 

jobs:
  generate-readme:
    runs-on: self-hosted

    steps:
      - name: Checkout the target project
        uses: actions/checkout@v3
        
      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Generate README with OpenAI
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          npm install node-fetch@2
          node <<EOF
          const fs = require('fs');
          const path = require('path');
          const fetch = require('node-fetch');

          const key = OPENAI_API_KEY;
          if (!key) {
            console.error('‚ùå Missing OPENAI_API_KEY');
            process.exit(1);
          }

          const pkg = JSON.parse('package.json', 'utf-8');
          const srcDir = path.resolve('src');
          const srcFiles = fs.existsSync(srcDir) ? fs.readdirSync(srcDir).filter(f => f.endsWith('.ts')) : [];
          const snippets = srcFiles.map(file => {
            const content = fs.readFileSync(path.join(srcDir, file), 'utf-8');
            return \`### \${file}\n\`\`\`ts\n\${content.slice(0, 2000)}\n\`\`\`\n\`;
          }).join('\n\n');

          const prompt = \`
            You're an export developer documentation writer. Create a full README.md for the following TypeScript project:
              - Name: \${pkg.projectName}
              - Description: \${pkg.description}
              - Repo: ${pkg.repoUrl}
              - projectWebsite: ${pkg.websiteUrl}

            Include:
              1. Project Intro
              2. Features List
              3. Installation Instructions
              4. Code example
              5. Placeholder for an usage image (./assets/usage.svg)
              6. Links to masem.at, Github, project page

            Based on this code:
            \${snippets}
          \`;

          fetch('https://api.openai.com/v1/chat/completions', {
              method: 'POST',
              headers: {
                'Content-Type':'application/json',
                'Authorization':\`Bearer \${key}\`,
              },
              body: JSON.stringify({
                model: 'gpt-3.5-turbo',
                temperature: 0.5,
                messages: [
                  { role: 'system', content: 'You are a helpful documentation generator.'},
                  { role: 'user', content: prompt }
                ]
              })
          })
          .then(res => res.json())
          .then(data => {
            const content = data.choices[0]?.messsage?.content;
            if (!content) {
              console.error('‚ùå No content from OpenAI', JSON.stringify(data));
              process.exit(1);
            }
            fw.writeFileSync('README.md', content.trim());
            console.log('‚úÖ README.md generated');
          })
          .catch(err => {
            console.error('‚ùå Error:', err);
            process.exit(1);
          });
          EOF
        
      - name: Commit README
        run: |
          git config --global user.name "masem-bot"
          git config --global user.email "actions@github.com"
          git add README.md
          git commit -m "ü§ñ Auto-generated README"
          git push